// source: google/firestore/v1/query.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_firestore_v1_document_pb = require('../../../google/firestore/v1/document_pb.js');
goog.object.extend(proto, google_firestore_v1_document_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
goog.exportSymbol('proto.google.firestore.v1.Cursor', null, global);
goog.exportSymbol('proto.google.firestore.v1.StructuredQuery', null, global);
goog.exportSymbol('proto.google.firestore.v1.StructuredQuery.CollectionSelector', null, global);
goog.exportSymbol('proto.google.firestore.v1.StructuredQuery.CompositeFilter', null, global);
goog.exportSymbol('proto.google.firestore.v1.StructuredQuery.CompositeFilter.Operator', null, global);
goog.exportSymbol('proto.google.firestore.v1.StructuredQuery.Direction', null, global);
goog.exportSymbol('proto.google.firestore.v1.StructuredQuery.FieldFilter', null, global);
goog.exportSymbol('proto.google.firestore.v1.StructuredQuery.FieldFilter.Operator', null, global);
goog.exportSymbol('proto.google.firestore.v1.StructuredQuery.FieldReference', null, global);
goog.exportSymbol('proto.google.firestore.v1.StructuredQuery.Filter', null, global);
goog.exportSymbol('proto.google.firestore.v1.StructuredQuery.Filter.FilterTypeCase', null, global);
goog.exportSymbol('proto.google.firestore.v1.StructuredQuery.Order', null, global);
goog.exportSymbol('proto.google.firestore.v1.StructuredQuery.Projection', null, global);
goog.exportSymbol('proto.google.firestore.v1.StructuredQuery.UnaryFilter', null, global);
goog.exportSymbol('proto.google.firestore.v1.StructuredQuery.UnaryFilter.OperandTypeCase', null, global);
goog.exportSymbol('proto.google.firestore.v1.StructuredQuery.UnaryFilter.Operator', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.firestore.v1.StructuredQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.firestore.v1.StructuredQuery.repeatedFields_, null);
};
goog.inherits(proto.google.firestore.v1.StructuredQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.firestore.v1.StructuredQuery.displayName = 'proto.google.firestore.v1.StructuredQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.firestore.v1.StructuredQuery.CollectionSelector = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.firestore.v1.StructuredQuery.CollectionSelector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.firestore.v1.StructuredQuery.CollectionSelector.displayName = 'proto.google.firestore.v1.StructuredQuery.CollectionSelector';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.firestore.v1.StructuredQuery.Filter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.firestore.v1.StructuredQuery.Filter.oneofGroups_);
};
goog.inherits(proto.google.firestore.v1.StructuredQuery.Filter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.firestore.v1.StructuredQuery.Filter.displayName = 'proto.google.firestore.v1.StructuredQuery.Filter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.firestore.v1.StructuredQuery.CompositeFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.firestore.v1.StructuredQuery.CompositeFilter.repeatedFields_, null);
};
goog.inherits(proto.google.firestore.v1.StructuredQuery.CompositeFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.firestore.v1.StructuredQuery.CompositeFilter.displayName = 'proto.google.firestore.v1.StructuredQuery.CompositeFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.firestore.v1.StructuredQuery.FieldFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.firestore.v1.StructuredQuery.FieldFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.firestore.v1.StructuredQuery.FieldFilter.displayName = 'proto.google.firestore.v1.StructuredQuery.FieldFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.firestore.v1.StructuredQuery.UnaryFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.firestore.v1.StructuredQuery.UnaryFilter.oneofGroups_);
};
goog.inherits(proto.google.firestore.v1.StructuredQuery.UnaryFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.firestore.v1.StructuredQuery.UnaryFilter.displayName = 'proto.google.firestore.v1.StructuredQuery.UnaryFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.firestore.v1.StructuredQuery.Order = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.firestore.v1.StructuredQuery.Order, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.firestore.v1.StructuredQuery.Order.displayName = 'proto.google.firestore.v1.StructuredQuery.Order';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.firestore.v1.StructuredQuery.FieldReference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.firestore.v1.StructuredQuery.FieldReference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.firestore.v1.StructuredQuery.FieldReference.displayName = 'proto.google.firestore.v1.StructuredQuery.FieldReference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.firestore.v1.StructuredQuery.Projection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.firestore.v1.StructuredQuery.Projection.repeatedFields_, null);
};
goog.inherits(proto.google.firestore.v1.StructuredQuery.Projection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.firestore.v1.StructuredQuery.Projection.displayName = 'proto.google.firestore.v1.StructuredQuery.Projection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.firestore.v1.Cursor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.firestore.v1.Cursor.repeatedFields_, null);
};
goog.inherits(proto.google.firestore.v1.Cursor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.firestore.v1.Cursor.displayName = 'proto.google.firestore.v1.Cursor';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.firestore.v1.StructuredQuery.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.firestore.v1.StructuredQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.google.firestore.v1.StructuredQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.firestore.v1.StructuredQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.v1.StructuredQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    select: (f = msg.getSelect()) && proto.google.firestore.v1.StructuredQuery.Projection.toObject(includeInstance, f),
    fromList: jspb.Message.toObjectList(msg.getFromList(),
    proto.google.firestore.v1.StructuredQuery.CollectionSelector.toObject, includeInstance),
    where: (f = msg.getWhere()) && proto.google.firestore.v1.StructuredQuery.Filter.toObject(includeInstance, f),
    orderByList: jspb.Message.toObjectList(msg.getOrderByList(),
    proto.google.firestore.v1.StructuredQuery.Order.toObject, includeInstance),
    startAt: (f = msg.getStartAt()) && proto.google.firestore.v1.Cursor.toObject(includeInstance, f),
    endAt: (f = msg.getEndAt()) && proto.google.firestore.v1.Cursor.toObject(includeInstance, f),
    offset: jspb.Message.getFieldWithDefault(msg, 6, 0),
    limit: (f = msg.getLimit()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.firestore.v1.StructuredQuery}
 */
proto.google.firestore.v1.StructuredQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.firestore.v1.StructuredQuery;
  return proto.google.firestore.v1.StructuredQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.firestore.v1.StructuredQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.firestore.v1.StructuredQuery}
 */
proto.google.firestore.v1.StructuredQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.firestore.v1.StructuredQuery.Projection;
      reader.readMessage(value,proto.google.firestore.v1.StructuredQuery.Projection.deserializeBinaryFromReader);
      msg.setSelect(value);
      break;
    case 2:
      var value = new proto.google.firestore.v1.StructuredQuery.CollectionSelector;
      reader.readMessage(value,proto.google.firestore.v1.StructuredQuery.CollectionSelector.deserializeBinaryFromReader);
      msg.addFrom(value);
      break;
    case 3:
      var value = new proto.google.firestore.v1.StructuredQuery.Filter;
      reader.readMessage(value,proto.google.firestore.v1.StructuredQuery.Filter.deserializeBinaryFromReader);
      msg.setWhere(value);
      break;
    case 4:
      var value = new proto.google.firestore.v1.StructuredQuery.Order;
      reader.readMessage(value,proto.google.firestore.v1.StructuredQuery.Order.deserializeBinaryFromReader);
      msg.addOrderBy(value);
      break;
    case 7:
      var value = new proto.google.firestore.v1.Cursor;
      reader.readMessage(value,proto.google.firestore.v1.Cursor.deserializeBinaryFromReader);
      msg.setStartAt(value);
      break;
    case 8:
      var value = new proto.google.firestore.v1.Cursor;
      reader.readMessage(value,proto.google.firestore.v1.Cursor.deserializeBinaryFromReader);
      msg.setEndAt(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 5:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.firestore.v1.StructuredQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.firestore.v1.StructuredQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.firestore.v1.StructuredQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.v1.StructuredQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSelect();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.firestore.v1.StructuredQuery.Projection.serializeBinaryToWriter
    );
  }
  f = message.getFromList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.google.firestore.v1.StructuredQuery.CollectionSelector.serializeBinaryToWriter
    );
  }
  f = message.getWhere();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.firestore.v1.StructuredQuery.Filter.serializeBinaryToWriter
    );
  }
  f = message.getOrderByList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.google.firestore.v1.StructuredQuery.Order.serializeBinaryToWriter
    );
  }
  f = message.getStartAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.google.firestore.v1.Cursor.serializeBinaryToWriter
    );
  }
  f = message.getEndAt();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.google.firestore.v1.Cursor.serializeBinaryToWriter
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getLimit();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.google.firestore.v1.StructuredQuery.Direction = {
  DIRECTION_UNSPECIFIED: 0,
  ASCENDING: 1,
  DESCENDING: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.firestore.v1.StructuredQuery.CollectionSelector.prototype.toObject = function(opt_includeInstance) {
  return proto.google.firestore.v1.StructuredQuery.CollectionSelector.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.firestore.v1.StructuredQuery.CollectionSelector} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.v1.StructuredQuery.CollectionSelector.toObject = function(includeInstance, msg) {
  var f, obj = {
    collectionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    allDescendants: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.firestore.v1.StructuredQuery.CollectionSelector}
 */
proto.google.firestore.v1.StructuredQuery.CollectionSelector.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.firestore.v1.StructuredQuery.CollectionSelector;
  return proto.google.firestore.v1.StructuredQuery.CollectionSelector.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.firestore.v1.StructuredQuery.CollectionSelector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.firestore.v1.StructuredQuery.CollectionSelector}
 */
proto.google.firestore.v1.StructuredQuery.CollectionSelector.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectionId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllDescendants(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.firestore.v1.StructuredQuery.CollectionSelector.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.firestore.v1.StructuredQuery.CollectionSelector.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.firestore.v1.StructuredQuery.CollectionSelector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.v1.StructuredQuery.CollectionSelector.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAllDescendants();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string collection_id = 2;
 * @return {string}
 */
proto.google.firestore.v1.StructuredQuery.CollectionSelector.prototype.getCollectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.firestore.v1.StructuredQuery.CollectionSelector} returns this
 */
proto.google.firestore.v1.StructuredQuery.CollectionSelector.prototype.setCollectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool all_descendants = 3;
 * @return {boolean}
 */
proto.google.firestore.v1.StructuredQuery.CollectionSelector.prototype.getAllDescendants = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.firestore.v1.StructuredQuery.CollectionSelector} returns this
 */
proto.google.firestore.v1.StructuredQuery.CollectionSelector.prototype.setAllDescendants = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.firestore.v1.StructuredQuery.Filter.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.google.firestore.v1.StructuredQuery.Filter.FilterTypeCase = {
  FILTER_TYPE_NOT_SET: 0,
  COMPOSITE_FILTER: 1,
  FIELD_FILTER: 2,
  UNARY_FILTER: 3
};

/**
 * @return {proto.google.firestore.v1.StructuredQuery.Filter.FilterTypeCase}
 */
proto.google.firestore.v1.StructuredQuery.Filter.prototype.getFilterTypeCase = function() {
  return /** @type {proto.google.firestore.v1.StructuredQuery.Filter.FilterTypeCase} */(jspb.Message.computeOneofCase(this, proto.google.firestore.v1.StructuredQuery.Filter.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.firestore.v1.StructuredQuery.Filter.prototype.toObject = function(opt_includeInstance) {
  return proto.google.firestore.v1.StructuredQuery.Filter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.firestore.v1.StructuredQuery.Filter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.v1.StructuredQuery.Filter.toObject = function(includeInstance, msg) {
  var f, obj = {
    compositeFilter: (f = msg.getCompositeFilter()) && proto.google.firestore.v1.StructuredQuery.CompositeFilter.toObject(includeInstance, f),
    fieldFilter: (f = msg.getFieldFilter()) && proto.google.firestore.v1.StructuredQuery.FieldFilter.toObject(includeInstance, f),
    unaryFilter: (f = msg.getUnaryFilter()) && proto.google.firestore.v1.StructuredQuery.UnaryFilter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.firestore.v1.StructuredQuery.Filter}
 */
proto.google.firestore.v1.StructuredQuery.Filter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.firestore.v1.StructuredQuery.Filter;
  return proto.google.firestore.v1.StructuredQuery.Filter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.firestore.v1.StructuredQuery.Filter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.firestore.v1.StructuredQuery.Filter}
 */
proto.google.firestore.v1.StructuredQuery.Filter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.firestore.v1.StructuredQuery.CompositeFilter;
      reader.readMessage(value,proto.google.firestore.v1.StructuredQuery.CompositeFilter.deserializeBinaryFromReader);
      msg.setCompositeFilter(value);
      break;
    case 2:
      var value = new proto.google.firestore.v1.StructuredQuery.FieldFilter;
      reader.readMessage(value,proto.google.firestore.v1.StructuredQuery.FieldFilter.deserializeBinaryFromReader);
      msg.setFieldFilter(value);
      break;
    case 3:
      var value = new proto.google.firestore.v1.StructuredQuery.UnaryFilter;
      reader.readMessage(value,proto.google.firestore.v1.StructuredQuery.UnaryFilter.deserializeBinaryFromReader);
      msg.setUnaryFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.firestore.v1.StructuredQuery.Filter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.firestore.v1.StructuredQuery.Filter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.firestore.v1.StructuredQuery.Filter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.v1.StructuredQuery.Filter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompositeFilter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.firestore.v1.StructuredQuery.CompositeFilter.serializeBinaryToWriter
    );
  }
  f = message.getFieldFilter();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.firestore.v1.StructuredQuery.FieldFilter.serializeBinaryToWriter
    );
  }
  f = message.getUnaryFilter();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.firestore.v1.StructuredQuery.UnaryFilter.serializeBinaryToWriter
    );
  }
};


/**
 * optional CompositeFilter composite_filter = 1;
 * @return {?proto.google.firestore.v1.StructuredQuery.CompositeFilter}
 */
proto.google.firestore.v1.StructuredQuery.Filter.prototype.getCompositeFilter = function() {
  return /** @type{?proto.google.firestore.v1.StructuredQuery.CompositeFilter} */ (
    jspb.Message.getWrapperField(this, proto.google.firestore.v1.StructuredQuery.CompositeFilter, 1));
};


/**
 * @param {?proto.google.firestore.v1.StructuredQuery.CompositeFilter|undefined} value
 * @return {!proto.google.firestore.v1.StructuredQuery.Filter} returns this
*/
proto.google.firestore.v1.StructuredQuery.Filter.prototype.setCompositeFilter = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.google.firestore.v1.StructuredQuery.Filter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.firestore.v1.StructuredQuery.Filter} returns this
 */
proto.google.firestore.v1.StructuredQuery.Filter.prototype.clearCompositeFilter = function() {
  return this.setCompositeFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.v1.StructuredQuery.Filter.prototype.hasCompositeFilter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FieldFilter field_filter = 2;
 * @return {?proto.google.firestore.v1.StructuredQuery.FieldFilter}
 */
proto.google.firestore.v1.StructuredQuery.Filter.prototype.getFieldFilter = function() {
  return /** @type{?proto.google.firestore.v1.StructuredQuery.FieldFilter} */ (
    jspb.Message.getWrapperField(this, proto.google.firestore.v1.StructuredQuery.FieldFilter, 2));
};


/**
 * @param {?proto.google.firestore.v1.StructuredQuery.FieldFilter|undefined} value
 * @return {!proto.google.firestore.v1.StructuredQuery.Filter} returns this
*/
proto.google.firestore.v1.StructuredQuery.Filter.prototype.setFieldFilter = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.google.firestore.v1.StructuredQuery.Filter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.firestore.v1.StructuredQuery.Filter} returns this
 */
proto.google.firestore.v1.StructuredQuery.Filter.prototype.clearFieldFilter = function() {
  return this.setFieldFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.v1.StructuredQuery.Filter.prototype.hasFieldFilter = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional UnaryFilter unary_filter = 3;
 * @return {?proto.google.firestore.v1.StructuredQuery.UnaryFilter}
 */
proto.google.firestore.v1.StructuredQuery.Filter.prototype.getUnaryFilter = function() {
  return /** @type{?proto.google.firestore.v1.StructuredQuery.UnaryFilter} */ (
    jspb.Message.getWrapperField(this, proto.google.firestore.v1.StructuredQuery.UnaryFilter, 3));
};


/**
 * @param {?proto.google.firestore.v1.StructuredQuery.UnaryFilter|undefined} value
 * @return {!proto.google.firestore.v1.StructuredQuery.Filter} returns this
*/
proto.google.firestore.v1.StructuredQuery.Filter.prototype.setUnaryFilter = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.google.firestore.v1.StructuredQuery.Filter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.firestore.v1.StructuredQuery.Filter} returns this
 */
proto.google.firestore.v1.StructuredQuery.Filter.prototype.clearUnaryFilter = function() {
  return this.setUnaryFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.v1.StructuredQuery.Filter.prototype.hasUnaryFilter = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.firestore.v1.StructuredQuery.CompositeFilter.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.firestore.v1.StructuredQuery.CompositeFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.google.firestore.v1.StructuredQuery.CompositeFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.firestore.v1.StructuredQuery.CompositeFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.v1.StructuredQuery.CompositeFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    op: jspb.Message.getFieldWithDefault(msg, 1, 0),
    filtersList: jspb.Message.toObjectList(msg.getFiltersList(),
    proto.google.firestore.v1.StructuredQuery.Filter.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.firestore.v1.StructuredQuery.CompositeFilter}
 */
proto.google.firestore.v1.StructuredQuery.CompositeFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.firestore.v1.StructuredQuery.CompositeFilter;
  return proto.google.firestore.v1.StructuredQuery.CompositeFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.firestore.v1.StructuredQuery.CompositeFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.firestore.v1.StructuredQuery.CompositeFilter}
 */
proto.google.firestore.v1.StructuredQuery.CompositeFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.firestore.v1.StructuredQuery.CompositeFilter.Operator} */ (reader.readEnum());
      msg.setOp(value);
      break;
    case 2:
      var value = new proto.google.firestore.v1.StructuredQuery.Filter;
      reader.readMessage(value,proto.google.firestore.v1.StructuredQuery.Filter.deserializeBinaryFromReader);
      msg.addFilters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.firestore.v1.StructuredQuery.CompositeFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.firestore.v1.StructuredQuery.CompositeFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.firestore.v1.StructuredQuery.CompositeFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.v1.StructuredQuery.CompositeFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOp();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.google.firestore.v1.StructuredQuery.Filter.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.google.firestore.v1.StructuredQuery.CompositeFilter.Operator = {
  OPERATOR_UNSPECIFIED: 0,
  AND: 1
};

/**
 * optional Operator op = 1;
 * @return {!proto.google.firestore.v1.StructuredQuery.CompositeFilter.Operator}
 */
proto.google.firestore.v1.StructuredQuery.CompositeFilter.prototype.getOp = function() {
  return /** @type {!proto.google.firestore.v1.StructuredQuery.CompositeFilter.Operator} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.google.firestore.v1.StructuredQuery.CompositeFilter.Operator} value
 * @return {!proto.google.firestore.v1.StructuredQuery.CompositeFilter} returns this
 */
proto.google.firestore.v1.StructuredQuery.CompositeFilter.prototype.setOp = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated Filter filters = 2;
 * @return {!Array<!proto.google.firestore.v1.StructuredQuery.Filter>}
 */
proto.google.firestore.v1.StructuredQuery.CompositeFilter.prototype.getFiltersList = function() {
  return /** @type{!Array<!proto.google.firestore.v1.StructuredQuery.Filter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.firestore.v1.StructuredQuery.Filter, 2));
};


/**
 * @param {!Array<!proto.google.firestore.v1.StructuredQuery.Filter>} value
 * @return {!proto.google.firestore.v1.StructuredQuery.CompositeFilter} returns this
*/
proto.google.firestore.v1.StructuredQuery.CompositeFilter.prototype.setFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.firestore.v1.StructuredQuery.Filter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.firestore.v1.StructuredQuery.Filter}
 */
proto.google.firestore.v1.StructuredQuery.CompositeFilter.prototype.addFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.firestore.v1.StructuredQuery.Filter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.firestore.v1.StructuredQuery.CompositeFilter} returns this
 */
proto.google.firestore.v1.StructuredQuery.CompositeFilter.prototype.clearFiltersList = function() {
  return this.setFiltersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.firestore.v1.StructuredQuery.FieldFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.google.firestore.v1.StructuredQuery.FieldFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.firestore.v1.StructuredQuery.FieldFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.v1.StructuredQuery.FieldFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    field: (f = msg.getField()) && proto.google.firestore.v1.StructuredQuery.FieldReference.toObject(includeInstance, f),
    op: jspb.Message.getFieldWithDefault(msg, 2, 0),
    value: (f = msg.getValue()) && google_firestore_v1_document_pb.Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.firestore.v1.StructuredQuery.FieldFilter}
 */
proto.google.firestore.v1.StructuredQuery.FieldFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.firestore.v1.StructuredQuery.FieldFilter;
  return proto.google.firestore.v1.StructuredQuery.FieldFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.firestore.v1.StructuredQuery.FieldFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.firestore.v1.StructuredQuery.FieldFilter}
 */
proto.google.firestore.v1.StructuredQuery.FieldFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.firestore.v1.StructuredQuery.FieldReference;
      reader.readMessage(value,proto.google.firestore.v1.StructuredQuery.FieldReference.deserializeBinaryFromReader);
      msg.setField(value);
      break;
    case 2:
      var value = /** @type {!proto.google.firestore.v1.StructuredQuery.FieldFilter.Operator} */ (reader.readEnum());
      msg.setOp(value);
      break;
    case 3:
      var value = new google_firestore_v1_document_pb.Value;
      reader.readMessage(value,google_firestore_v1_document_pb.Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.firestore.v1.StructuredQuery.FieldFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.firestore.v1.StructuredQuery.FieldFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.firestore.v1.StructuredQuery.FieldFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.v1.StructuredQuery.FieldFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.firestore.v1.StructuredQuery.FieldReference.serializeBinaryToWriter
    );
  }
  f = message.getOp();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_firestore_v1_document_pb.Value.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.google.firestore.v1.StructuredQuery.FieldFilter.Operator = {
  OPERATOR_UNSPECIFIED: 0,
  LESS_THAN: 1,
  LESS_THAN_OR_EQUAL: 2,
  GREATER_THAN: 3,
  GREATER_THAN_OR_EQUAL: 4,
  EQUAL: 5,
  NOT_EQUAL: 6,
  ARRAY_CONTAINS: 7,
  IN: 8,
  ARRAY_CONTAINS_ANY: 9,
  NOT_IN: 10
};

/**
 * optional FieldReference field = 1;
 * @return {?proto.google.firestore.v1.StructuredQuery.FieldReference}
 */
proto.google.firestore.v1.StructuredQuery.FieldFilter.prototype.getField = function() {
  return /** @type{?proto.google.firestore.v1.StructuredQuery.FieldReference} */ (
    jspb.Message.getWrapperField(this, proto.google.firestore.v1.StructuredQuery.FieldReference, 1));
};


/**
 * @param {?proto.google.firestore.v1.StructuredQuery.FieldReference|undefined} value
 * @return {!proto.google.firestore.v1.StructuredQuery.FieldFilter} returns this
*/
proto.google.firestore.v1.StructuredQuery.FieldFilter.prototype.setField = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.firestore.v1.StructuredQuery.FieldFilter} returns this
 */
proto.google.firestore.v1.StructuredQuery.FieldFilter.prototype.clearField = function() {
  return this.setField(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.v1.StructuredQuery.FieldFilter.prototype.hasField = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Operator op = 2;
 * @return {!proto.google.firestore.v1.StructuredQuery.FieldFilter.Operator}
 */
proto.google.firestore.v1.StructuredQuery.FieldFilter.prototype.getOp = function() {
  return /** @type {!proto.google.firestore.v1.StructuredQuery.FieldFilter.Operator} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.google.firestore.v1.StructuredQuery.FieldFilter.Operator} value
 * @return {!proto.google.firestore.v1.StructuredQuery.FieldFilter} returns this
 */
proto.google.firestore.v1.StructuredQuery.FieldFilter.prototype.setOp = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Value value = 3;
 * @return {?proto.google.firestore.v1.Value}
 */
proto.google.firestore.v1.StructuredQuery.FieldFilter.prototype.getValue = function() {
  return /** @type{?proto.google.firestore.v1.Value} */ (
    jspb.Message.getWrapperField(this, google_firestore_v1_document_pb.Value, 3));
};


/**
 * @param {?proto.google.firestore.v1.Value|undefined} value
 * @return {!proto.google.firestore.v1.StructuredQuery.FieldFilter} returns this
*/
proto.google.firestore.v1.StructuredQuery.FieldFilter.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.firestore.v1.StructuredQuery.FieldFilter} returns this
 */
proto.google.firestore.v1.StructuredQuery.FieldFilter.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.v1.StructuredQuery.FieldFilter.prototype.hasValue = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.firestore.v1.StructuredQuery.UnaryFilter.oneofGroups_ = [[2]];

/**
 * @enum {number}
 */
proto.google.firestore.v1.StructuredQuery.UnaryFilter.OperandTypeCase = {
  OPERAND_TYPE_NOT_SET: 0,
  FIELD: 2
};

/**
 * @return {proto.google.firestore.v1.StructuredQuery.UnaryFilter.OperandTypeCase}
 */
proto.google.firestore.v1.StructuredQuery.UnaryFilter.prototype.getOperandTypeCase = function() {
  return /** @type {proto.google.firestore.v1.StructuredQuery.UnaryFilter.OperandTypeCase} */(jspb.Message.computeOneofCase(this, proto.google.firestore.v1.StructuredQuery.UnaryFilter.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.firestore.v1.StructuredQuery.UnaryFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.google.firestore.v1.StructuredQuery.UnaryFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.firestore.v1.StructuredQuery.UnaryFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.v1.StructuredQuery.UnaryFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    op: jspb.Message.getFieldWithDefault(msg, 1, 0),
    field: (f = msg.getField()) && proto.google.firestore.v1.StructuredQuery.FieldReference.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.firestore.v1.StructuredQuery.UnaryFilter}
 */
proto.google.firestore.v1.StructuredQuery.UnaryFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.firestore.v1.StructuredQuery.UnaryFilter;
  return proto.google.firestore.v1.StructuredQuery.UnaryFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.firestore.v1.StructuredQuery.UnaryFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.firestore.v1.StructuredQuery.UnaryFilter}
 */
proto.google.firestore.v1.StructuredQuery.UnaryFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.firestore.v1.StructuredQuery.UnaryFilter.Operator} */ (reader.readEnum());
      msg.setOp(value);
      break;
    case 2:
      var value = new proto.google.firestore.v1.StructuredQuery.FieldReference;
      reader.readMessage(value,proto.google.firestore.v1.StructuredQuery.FieldReference.deserializeBinaryFromReader);
      msg.setField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.firestore.v1.StructuredQuery.UnaryFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.firestore.v1.StructuredQuery.UnaryFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.firestore.v1.StructuredQuery.UnaryFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.v1.StructuredQuery.UnaryFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOp();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getField();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.firestore.v1.StructuredQuery.FieldReference.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.google.firestore.v1.StructuredQuery.UnaryFilter.Operator = {
  OPERATOR_UNSPECIFIED: 0,
  IS_NAN: 2,
  IS_NULL: 3,
  IS_NOT_NAN: 4,
  IS_NOT_NULL: 5
};

/**
 * optional Operator op = 1;
 * @return {!proto.google.firestore.v1.StructuredQuery.UnaryFilter.Operator}
 */
proto.google.firestore.v1.StructuredQuery.UnaryFilter.prototype.getOp = function() {
  return /** @type {!proto.google.firestore.v1.StructuredQuery.UnaryFilter.Operator} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.google.firestore.v1.StructuredQuery.UnaryFilter.Operator} value
 * @return {!proto.google.firestore.v1.StructuredQuery.UnaryFilter} returns this
 */
proto.google.firestore.v1.StructuredQuery.UnaryFilter.prototype.setOp = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional FieldReference field = 2;
 * @return {?proto.google.firestore.v1.StructuredQuery.FieldReference}
 */
proto.google.firestore.v1.StructuredQuery.UnaryFilter.prototype.getField = function() {
  return /** @type{?proto.google.firestore.v1.StructuredQuery.FieldReference} */ (
    jspb.Message.getWrapperField(this, proto.google.firestore.v1.StructuredQuery.FieldReference, 2));
};


/**
 * @param {?proto.google.firestore.v1.StructuredQuery.FieldReference|undefined} value
 * @return {!proto.google.firestore.v1.StructuredQuery.UnaryFilter} returns this
*/
proto.google.firestore.v1.StructuredQuery.UnaryFilter.prototype.setField = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.google.firestore.v1.StructuredQuery.UnaryFilter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.firestore.v1.StructuredQuery.UnaryFilter} returns this
 */
proto.google.firestore.v1.StructuredQuery.UnaryFilter.prototype.clearField = function() {
  return this.setField(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.v1.StructuredQuery.UnaryFilter.prototype.hasField = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.firestore.v1.StructuredQuery.Order.prototype.toObject = function(opt_includeInstance) {
  return proto.google.firestore.v1.StructuredQuery.Order.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.firestore.v1.StructuredQuery.Order} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.v1.StructuredQuery.Order.toObject = function(includeInstance, msg) {
  var f, obj = {
    field: (f = msg.getField()) && proto.google.firestore.v1.StructuredQuery.FieldReference.toObject(includeInstance, f),
    direction: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.firestore.v1.StructuredQuery.Order}
 */
proto.google.firestore.v1.StructuredQuery.Order.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.firestore.v1.StructuredQuery.Order;
  return proto.google.firestore.v1.StructuredQuery.Order.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.firestore.v1.StructuredQuery.Order} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.firestore.v1.StructuredQuery.Order}
 */
proto.google.firestore.v1.StructuredQuery.Order.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.firestore.v1.StructuredQuery.FieldReference;
      reader.readMessage(value,proto.google.firestore.v1.StructuredQuery.FieldReference.deserializeBinaryFromReader);
      msg.setField(value);
      break;
    case 2:
      var value = /** @type {!proto.google.firestore.v1.StructuredQuery.Direction} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.firestore.v1.StructuredQuery.Order.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.firestore.v1.StructuredQuery.Order.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.firestore.v1.StructuredQuery.Order} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.v1.StructuredQuery.Order.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.firestore.v1.StructuredQuery.FieldReference.serializeBinaryToWriter
    );
  }
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional FieldReference field = 1;
 * @return {?proto.google.firestore.v1.StructuredQuery.FieldReference}
 */
proto.google.firestore.v1.StructuredQuery.Order.prototype.getField = function() {
  return /** @type{?proto.google.firestore.v1.StructuredQuery.FieldReference} */ (
    jspb.Message.getWrapperField(this, proto.google.firestore.v1.StructuredQuery.FieldReference, 1));
};


/**
 * @param {?proto.google.firestore.v1.StructuredQuery.FieldReference|undefined} value
 * @return {!proto.google.firestore.v1.StructuredQuery.Order} returns this
*/
proto.google.firestore.v1.StructuredQuery.Order.prototype.setField = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.firestore.v1.StructuredQuery.Order} returns this
 */
proto.google.firestore.v1.StructuredQuery.Order.prototype.clearField = function() {
  return this.setField(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.v1.StructuredQuery.Order.prototype.hasField = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Direction direction = 2;
 * @return {!proto.google.firestore.v1.StructuredQuery.Direction}
 */
proto.google.firestore.v1.StructuredQuery.Order.prototype.getDirection = function() {
  return /** @type {!proto.google.firestore.v1.StructuredQuery.Direction} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.google.firestore.v1.StructuredQuery.Direction} value
 * @return {!proto.google.firestore.v1.StructuredQuery.Order} returns this
 */
proto.google.firestore.v1.StructuredQuery.Order.prototype.setDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.firestore.v1.StructuredQuery.FieldReference.prototype.toObject = function(opt_includeInstance) {
  return proto.google.firestore.v1.StructuredQuery.FieldReference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.firestore.v1.StructuredQuery.FieldReference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.v1.StructuredQuery.FieldReference.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldPath: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.firestore.v1.StructuredQuery.FieldReference}
 */
proto.google.firestore.v1.StructuredQuery.FieldReference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.firestore.v1.StructuredQuery.FieldReference;
  return proto.google.firestore.v1.StructuredQuery.FieldReference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.firestore.v1.StructuredQuery.FieldReference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.firestore.v1.StructuredQuery.FieldReference}
 */
proto.google.firestore.v1.StructuredQuery.FieldReference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.firestore.v1.StructuredQuery.FieldReference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.firestore.v1.StructuredQuery.FieldReference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.firestore.v1.StructuredQuery.FieldReference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.v1.StructuredQuery.FieldReference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string field_path = 2;
 * @return {string}
 */
proto.google.firestore.v1.StructuredQuery.FieldReference.prototype.getFieldPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.firestore.v1.StructuredQuery.FieldReference} returns this
 */
proto.google.firestore.v1.StructuredQuery.FieldReference.prototype.setFieldPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.firestore.v1.StructuredQuery.Projection.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.firestore.v1.StructuredQuery.Projection.prototype.toObject = function(opt_includeInstance) {
  return proto.google.firestore.v1.StructuredQuery.Projection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.firestore.v1.StructuredQuery.Projection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.v1.StructuredQuery.Projection.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldsList: jspb.Message.toObjectList(msg.getFieldsList(),
    proto.google.firestore.v1.StructuredQuery.FieldReference.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.firestore.v1.StructuredQuery.Projection}
 */
proto.google.firestore.v1.StructuredQuery.Projection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.firestore.v1.StructuredQuery.Projection;
  return proto.google.firestore.v1.StructuredQuery.Projection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.firestore.v1.StructuredQuery.Projection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.firestore.v1.StructuredQuery.Projection}
 */
proto.google.firestore.v1.StructuredQuery.Projection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.google.firestore.v1.StructuredQuery.FieldReference;
      reader.readMessage(value,proto.google.firestore.v1.StructuredQuery.FieldReference.deserializeBinaryFromReader);
      msg.addFields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.firestore.v1.StructuredQuery.Projection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.firestore.v1.StructuredQuery.Projection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.firestore.v1.StructuredQuery.Projection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.v1.StructuredQuery.Projection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.google.firestore.v1.StructuredQuery.FieldReference.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FieldReference fields = 2;
 * @return {!Array<!proto.google.firestore.v1.StructuredQuery.FieldReference>}
 */
proto.google.firestore.v1.StructuredQuery.Projection.prototype.getFieldsList = function() {
  return /** @type{!Array<!proto.google.firestore.v1.StructuredQuery.FieldReference>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.firestore.v1.StructuredQuery.FieldReference, 2));
};


/**
 * @param {!Array<!proto.google.firestore.v1.StructuredQuery.FieldReference>} value
 * @return {!proto.google.firestore.v1.StructuredQuery.Projection} returns this
*/
proto.google.firestore.v1.StructuredQuery.Projection.prototype.setFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.firestore.v1.StructuredQuery.FieldReference=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.firestore.v1.StructuredQuery.FieldReference}
 */
proto.google.firestore.v1.StructuredQuery.Projection.prototype.addFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.firestore.v1.StructuredQuery.FieldReference, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.firestore.v1.StructuredQuery.Projection} returns this
 */
proto.google.firestore.v1.StructuredQuery.Projection.prototype.clearFieldsList = function() {
  return this.setFieldsList([]);
};


/**
 * optional Projection select = 1;
 * @return {?proto.google.firestore.v1.StructuredQuery.Projection}
 */
proto.google.firestore.v1.StructuredQuery.prototype.getSelect = function() {
  return /** @type{?proto.google.firestore.v1.StructuredQuery.Projection} */ (
    jspb.Message.getWrapperField(this, proto.google.firestore.v1.StructuredQuery.Projection, 1));
};


/**
 * @param {?proto.google.firestore.v1.StructuredQuery.Projection|undefined} value
 * @return {!proto.google.firestore.v1.StructuredQuery} returns this
*/
proto.google.firestore.v1.StructuredQuery.prototype.setSelect = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.firestore.v1.StructuredQuery} returns this
 */
proto.google.firestore.v1.StructuredQuery.prototype.clearSelect = function() {
  return this.setSelect(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.v1.StructuredQuery.prototype.hasSelect = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated CollectionSelector from = 2;
 * @return {!Array<!proto.google.firestore.v1.StructuredQuery.CollectionSelector>}
 */
proto.google.firestore.v1.StructuredQuery.prototype.getFromList = function() {
  return /** @type{!Array<!proto.google.firestore.v1.StructuredQuery.CollectionSelector>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.firestore.v1.StructuredQuery.CollectionSelector, 2));
};


/**
 * @param {!Array<!proto.google.firestore.v1.StructuredQuery.CollectionSelector>} value
 * @return {!proto.google.firestore.v1.StructuredQuery} returns this
*/
proto.google.firestore.v1.StructuredQuery.prototype.setFromList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.firestore.v1.StructuredQuery.CollectionSelector=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.firestore.v1.StructuredQuery.CollectionSelector}
 */
proto.google.firestore.v1.StructuredQuery.prototype.addFrom = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.firestore.v1.StructuredQuery.CollectionSelector, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.firestore.v1.StructuredQuery} returns this
 */
proto.google.firestore.v1.StructuredQuery.prototype.clearFromList = function() {
  return this.setFromList([]);
};


/**
 * optional Filter where = 3;
 * @return {?proto.google.firestore.v1.StructuredQuery.Filter}
 */
proto.google.firestore.v1.StructuredQuery.prototype.getWhere = function() {
  return /** @type{?proto.google.firestore.v1.StructuredQuery.Filter} */ (
    jspb.Message.getWrapperField(this, proto.google.firestore.v1.StructuredQuery.Filter, 3));
};


/**
 * @param {?proto.google.firestore.v1.StructuredQuery.Filter|undefined} value
 * @return {!proto.google.firestore.v1.StructuredQuery} returns this
*/
proto.google.firestore.v1.StructuredQuery.prototype.setWhere = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.firestore.v1.StructuredQuery} returns this
 */
proto.google.firestore.v1.StructuredQuery.prototype.clearWhere = function() {
  return this.setWhere(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.v1.StructuredQuery.prototype.hasWhere = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Order order_by = 4;
 * @return {!Array<!proto.google.firestore.v1.StructuredQuery.Order>}
 */
proto.google.firestore.v1.StructuredQuery.prototype.getOrderByList = function() {
  return /** @type{!Array<!proto.google.firestore.v1.StructuredQuery.Order>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.firestore.v1.StructuredQuery.Order, 4));
};


/**
 * @param {!Array<!proto.google.firestore.v1.StructuredQuery.Order>} value
 * @return {!proto.google.firestore.v1.StructuredQuery} returns this
*/
proto.google.firestore.v1.StructuredQuery.prototype.setOrderByList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.google.firestore.v1.StructuredQuery.Order=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.firestore.v1.StructuredQuery.Order}
 */
proto.google.firestore.v1.StructuredQuery.prototype.addOrderBy = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.google.firestore.v1.StructuredQuery.Order, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.firestore.v1.StructuredQuery} returns this
 */
proto.google.firestore.v1.StructuredQuery.prototype.clearOrderByList = function() {
  return this.setOrderByList([]);
};


/**
 * optional Cursor start_at = 7;
 * @return {?proto.google.firestore.v1.Cursor}
 */
proto.google.firestore.v1.StructuredQuery.prototype.getStartAt = function() {
  return /** @type{?proto.google.firestore.v1.Cursor} */ (
    jspb.Message.getWrapperField(this, proto.google.firestore.v1.Cursor, 7));
};


/**
 * @param {?proto.google.firestore.v1.Cursor|undefined} value
 * @return {!proto.google.firestore.v1.StructuredQuery} returns this
*/
proto.google.firestore.v1.StructuredQuery.prototype.setStartAt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.firestore.v1.StructuredQuery} returns this
 */
proto.google.firestore.v1.StructuredQuery.prototype.clearStartAt = function() {
  return this.setStartAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.v1.StructuredQuery.prototype.hasStartAt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Cursor end_at = 8;
 * @return {?proto.google.firestore.v1.Cursor}
 */
proto.google.firestore.v1.StructuredQuery.prototype.getEndAt = function() {
  return /** @type{?proto.google.firestore.v1.Cursor} */ (
    jspb.Message.getWrapperField(this, proto.google.firestore.v1.Cursor, 8));
};


/**
 * @param {?proto.google.firestore.v1.Cursor|undefined} value
 * @return {!proto.google.firestore.v1.StructuredQuery} returns this
*/
proto.google.firestore.v1.StructuredQuery.prototype.setEndAt = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.firestore.v1.StructuredQuery} returns this
 */
proto.google.firestore.v1.StructuredQuery.prototype.clearEndAt = function() {
  return this.setEndAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.v1.StructuredQuery.prototype.hasEndAt = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 offset = 6;
 * @return {number}
 */
proto.google.firestore.v1.StructuredQuery.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.firestore.v1.StructuredQuery} returns this
 */
proto.google.firestore.v1.StructuredQuery.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional google.protobuf.Int32Value limit = 5;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.google.firestore.v1.StructuredQuery.prototype.getLimit = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 5));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.google.firestore.v1.StructuredQuery} returns this
*/
proto.google.firestore.v1.StructuredQuery.prototype.setLimit = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.firestore.v1.StructuredQuery} returns this
 */
proto.google.firestore.v1.StructuredQuery.prototype.clearLimit = function() {
  return this.setLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.v1.StructuredQuery.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.firestore.v1.Cursor.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.firestore.v1.Cursor.prototype.toObject = function(opt_includeInstance) {
  return proto.google.firestore.v1.Cursor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.firestore.v1.Cursor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.v1.Cursor.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    google_firestore_v1_document_pb.Value.toObject, includeInstance),
    before: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.firestore.v1.Cursor}
 */
proto.google.firestore.v1.Cursor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.firestore.v1.Cursor;
  return proto.google.firestore.v1.Cursor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.firestore.v1.Cursor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.firestore.v1.Cursor}
 */
proto.google.firestore.v1.Cursor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_firestore_v1_document_pb.Value;
      reader.readMessage(value,google_firestore_v1_document_pb.Value.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBefore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.firestore.v1.Cursor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.firestore.v1.Cursor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.firestore.v1.Cursor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.v1.Cursor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      google_firestore_v1_document_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getBefore();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * repeated Value values = 1;
 * @return {!Array<!proto.google.firestore.v1.Value>}
 */
proto.google.firestore.v1.Cursor.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.google.firestore.v1.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_firestore_v1_document_pb.Value, 1));
};


/**
 * @param {!Array<!proto.google.firestore.v1.Value>} value
 * @return {!proto.google.firestore.v1.Cursor} returns this
*/
proto.google.firestore.v1.Cursor.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.firestore.v1.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.firestore.v1.Value}
 */
proto.google.firestore.v1.Cursor.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.firestore.v1.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.firestore.v1.Cursor} returns this
 */
proto.google.firestore.v1.Cursor.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


/**
 * optional bool before = 2;
 * @return {boolean}
 */
proto.google.firestore.v1.Cursor.prototype.getBefore = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.firestore.v1.Cursor} returns this
 */
proto.google.firestore.v1.Cursor.prototype.setBefore = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


goog.object.extend(exports, proto.google.firestore.v1);
